@using CleanArchWithCQRSandMediator.Application.Blogs.Queries.GetBlogs;

@if (Visible)
{
    <h3>Create a new blog</h3>

    <EditForm Model="newProduct" OnInvalidSubmit="CreateNewProduct">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="newProduct.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="newProduct.Description" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="imageUrl">Image Url</label>
            <InputText id="imageUrl" @bind-Value="newProduct.ImageUrl" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="author">Author</label>
            <InputText id="author" @bind-Value="newProduct.Author" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary m-md-1">Create</button>
        <button class="btn btn-primary m-md-1" @onclick="CancelBlog">Back to blog list</button>

    </EditForm>
}


@code {
    [Parameter]
    public EventCallback cancelBlogClicked { get; set; }

    [Parameter]
    public EventCallback<BlogVm> OnSave { get; set; }

    private async Task CancelBlog()
    {
        await cancelBlogClicked.InvokeAsync();
    }


}
